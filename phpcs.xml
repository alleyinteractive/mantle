<?xml version="1.0"?>
<ruleset>
	<description>alleyinteractive/mantle</description>

	<arg value="ps" />

	<exclude-pattern>tests/</exclude-pattern>
	<exclude-pattern>bootstrap/cache</exclude-pattern>

	<rule ref="Alley-Interactive">
		<!-- todo: port to alley coding standards -->
		<exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket" />
		<exclude name="PEAR.Functions.FunctionCallSignature.MultipleArguments" />
		<exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine" />
	</rule>

	<rule ref="WordPress">
		<exclude name="WordPress.NamingConventions.ValidPostTypeSlug.NotStringLiteral" />
	</rule>

	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<property name="prefixes" type="array">
				<element value="App"/>
			</property>
		</properties>
		<exclude-pattern>views/</exclude-pattern>
	</rule>

	<rule ref="Squiz.Commenting.FunctionComment">
		<exclude-pattern>src/mantle/framework/container/class-container.php</exclude-pattern>
	</rule>

	<rule ref="Squiz.PHP.DisallowMultipleAssignments">
		<exclude-pattern>src/mantle/framework/container/class-container.php</exclude-pattern>
	</rule>

	<rule ref="WordPress.Arrays.MultipleStatementAlignment.DoubleArrowNotAligned">
		<exclude-pattern>config</exclude-pattern>
	</rule>

	<rule ref="Generic.CodeAnalysis.UselessOverridingMethod.Found">
		<exclude-pattern>app/</exclude-pattern>
	</rule>

	<rule ref="Squiz.PHP.CommentedOutCode.Found">
		<exclude-pattern>routes/</exclude-pattern>
		<exclude-pattern>app/</exclude-pattern>
	</rule>

	<rule ref="Squiz.Commenting.InlineComment.InvalidEndChar">
		<exclude-pattern>app/providers</exclude-pattern>
	</rule>

	<rule ref="Squiz.Commenting.InlineComment">
		<exclude-pattern>routes/</exclude-pattern>
	</rule>
</ruleset>
